<launch>

  <arg name="UAV_NAME" default="$(env UAV_NAME)" />
  <arg name="custom_config" default="" />
  <arg name="standalone" default="true" />
  <arg name="debug" default="false" />

  <!-- define launch-prefix for debugging -->
  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />

  <!-- switching between standalone and nodeleted nodelet -->
  <arg     if="$(arg standalone)" name="nodelet" value="standalone" />
  <arg unless="$(arg standalone)" name="nodelet" value="load" />
  <arg     if="$(arg standalone)" name="nodelet_manager" value="" />
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg UAV_NAME)_example_nodelet_manager" />

  <group ns="$(arg UAV_NAME)">

    <node name="tii_uav_example" pkg="nodelet" type="nodelet" args="$(arg nodelet) tii_uav_example/TiiUavExample $(arg nodelet_manager)" output="screen" launch-prefix="$(arg launch_prefix)">

      <rosparam file="$(find tii_uav_example)/config/default.yaml" />

      <!-- Load a user param file -->
      <rosparam if="$(eval not arg('custom_config') == '')" file="$(arg custom_config)" />

      <!-- Subscribers in -->
      <remap from="~other_uav_odom_in" to="/uav1/odometry/odom_main" />
      <remap from="~this_uav_cmd_in" to="/uav2/control_manager/cmd_odom" />
      <remap from="~this_uav_control_diag_in" to="/uav2/control_manager/diagnostics" />

      <!-- Services out -->
      <remap from="~land_home_out" to="/uav2/uav_manager/land_home" />
      <remap from="~path_out" to="/uav2/trajectory_generation/path" />

      <!-- Services in -->
      <remap from="~start_in" to="~start" />

      <!-- Publishers out -->
      <remap from="~diagnostics_out" to="~diagnostics" />

    </node>

  </group>

</launch>
