name: simulation
root: ./
startup_window: example
pre_window: export RUN_TYPE=simulation; export UAV_TYPE=t650; export WORLD_NAME=simulation; export SENSORS="garmin_down"; export ODOMETRY_TYPE="gps"
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_name:=grass_plane gui:=true
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
  - tf_connector:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_odometry tf_connector.launch custom_config:=./custom_configs/tf_connector.yaml
  - status:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --pos 0 0 1 0"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "2 $UAV_TYPE --enable-rangefinder --enable-mobius-camera-front --pos -15 0 1 0"
  - control:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general core.launch
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_uav_general core.launch
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - example:
      layout: tiled
      panes:
        - export UAV_NAME=uav2; waitForRos; roslaunch tii_uav_example tii_uav_example.launch
        - export UAV_NAME=uav2; history -s 'rosservice call /$UAV_NAME/tii_uav_example/start'
  - takeoff:
      layout: tiled
      panes:
        # #{ uav1
        - 'export UAV_NAME=uav1;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav2
        - 'export UAV_NAME=uav2;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
  - rviz:
      layout: tiled
      panes:
        - waitForControl; rosrun rviz rviz -d rviz.rviz
        - waitForControl; export UAV_NAME=uav1; waitForControl; roslaunch mrs_rviz_plugins rviz_interface.launch
        - waitForControl; export UAV_NAME=uav1; roslaunch mrs_rviz_plugins load_robot.launch
        - waitForControl; export UAV_NAME=uav2; roslaunch mrs_rviz_plugins load_robot.launch
  - i3_layout:
      layout: tiled
      panes:
        - waitForControl; sleep 4; ~/.i3/layout_manager.sh ./i3_layout.json
